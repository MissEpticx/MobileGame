package uk.ac.tees.mgd.a0208468.mobilegame.environments;

import static uk.ac.tees.mgd.a0208468.mobilegame.Utils.GameConstants.Sprite.TILE_SIZE;

import android.graphics.Canvas;
import android.graphics.Point;
import android.graphics.PointF;
import android.graphics.RectF;

import uk.ac.tees.mgd.a0208468.mobilegame.main.Game;

public class MapManager {
    private GameMap currentDirt;
    private GameMap currentGrass;
    private GameMap currentHills;
    private GameMap currentBushes;
    private GameMap currentSlopes;
    private GameMap currentWater;
    private GameMap currentWaterLedge;
    private float cameraX;
    private float cameraY;
    public MapManager(){
        InitialiseMap();
    }

    public void InitialiseMap(){
        int[][] bushSpriteIds = {
                { 0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2},
                {11, 16, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 17, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 13},
                {11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 13},
                {11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 78, 78, 78, 78, 78, 78, 78, 16, 23, 23, 23, 23, 23, 23, 23, 23, 23, 18},
                {11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 78, 78, 78, 78, 78, 78, 78, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 22, 23, 23, 23, 23, 23, 23, 23, 24, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {22, 24, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 25},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10}
        };

        int[][] waterSpriteIds = {
                { 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
                { 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  0,  4,  4,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0},
                { 0,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0},
                { 0,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0},
                { 0,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0},
                { 0,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0},
                { 0,  0,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
        };

        int[][] waterLedgeSpriteIds = {
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  0,  0,  0,  0,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},
                { 4,  4,  0,  4,  4,  0,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  4},
                { 4,  0,  0,  4,  4,  0,  0,  0,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4},
                { 4,  0,  4,  4,  4,  4,  4,  0,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4},
                { 4,  0,  4,  4,  4,  4,  4,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4},
                { 4,  0,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4},
                { 4,  0,  4,  4,  4,  4,  4,  4,  0,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4},
                { 4,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4}
        };

        int[][] dirtSpriteIds = {
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10,  0,  1,  1,  1,  1,  1,  1,  1,  2, 10},
                {10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                {10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 27,  1,  1,  1,  1,  1,  1,  1,  1 , 1, 28, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                {22, 23, 17, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                { 3, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                {14, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                {14, 10, 22, 23, 23, 23, 23, 23, 23, 17, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                {48,  8, 34, 35, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10},
                {14, 25,  0,  1,  1,  2, 10, 36, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 24},
                {25, 10, 11, 12, 12, 13, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 23, 23, 23, 23, 24, 10},
                {10,  0, 28, 12, 12, 27,  1,  2, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 10, 10, 10, 36, 10},
                {10, 11, 12, 12, 12, 12, 12, 13, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 33,  7, 10, 10, 10},
                {10, 11, 12, 12, 12, 12, 12, 13, 10, 22, 23, 23, 23, 23, 23, 23, 23, 17, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 10, 14, 10,  3, 10},
                {10, 11, 12, 12, 12, 12, 12, 27,  2, 10, 10, 10, 10,  3, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 10, 10, 37, 34, 51, 10},
                {36, 11, 12, 12, 12, 12, 12, 12, 27,  2, 10,  3, 10, 37, 34, 35, 10, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 10, 36, 10, 10, 14, 10},
                {10, 22, 23, 23, 23, 23, 23, 23, 23, 24, 10, 25, 10, 10, 10, 10, 36, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 36, 10, 10, 10, 25, 10}
        };

        int[][] grassSpriteIds = {
                { 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,  2},
                {11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 13},
                {11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 10, 10, 10, 10, 10, 12, 12, 12, 10, 10, 10, 10, 10, 10, 10, 13},
                {11, 12, 12, 16, 23, 23, 23, 23, 23, 23, 23, 23, 23, 17, 12, 12, 10, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {11, 12, 12, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 10, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {11, 12, 12, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {11, 12, 12, 13, 10, 10, 10, 10, 10, 10,  0,  1,  1, 28, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {22, 23, 17, 13, 10, 10, 10, 10, 10, 10, 11, 16, 23, 23, 23, 23, 23, 23, 23, 23, 17, 16, 23, 23, 17, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {10, 10, 11, 13, 10, 10, 10, 10, 10, 10, 11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 11, 13, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {10, 10, 11, 27,  1,  1,  1,  1,  1,  1, 28, 13, 10, 10, 10, 10, 10, 10, 10, 10, 11, 13, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {10, 10, 22, 23, 23, 23, 23, 23, 23, 17, 12, 27,  1,  1,  1,  1,  1,  1,  1,  1, 28, 27,  1,  1, 28, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {36,  3, 33, 35, 10, 10, 10, 10, 10, 11, 16, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 17, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13},
                {10, 25, 10, 33, 34,  7, 10, 10, 10, 11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 24},
                {10, 10, 10, 10, 36, 14, 10, 10, 10, 11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 22, 23, 23, 23, 17, 16, 23, 23, 23, 23, 24, 10},
                {10, 10, 10, 10, 10, 37,  6,  2, 10, 11, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 13, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 11, 13, 10, 11, 27,  1,  1,  1,  1,  1,  1,  1,  2, 10, 10, 10, 10, 10, 10, 10, 11, 13, 10, 10,  3, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 11, 13, 10, 22, 23, 23, 23, 23, 23, 23, 23, 17, 13, 10, 10, 10, 10, 10, 10, 10, 11, 13, 10, 10, 14, 10, 36, 10},
                {10, 10, 10, 10, 10, 10, 22, 38,  7, 10, 10, 10, 10, 10, 10, 10, 10, 11, 27,  1,  1,  1,  1,  1,  1,  1, 28, 13, 10, 10, 37, 35, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 25, 10, 10, 10, 10, 33, 35, 10, 10, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 33, 35, 10, 10, 10, 10, 10, 10, 36, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 36, 10, 10, 10, 10, 10}
        };

        int[][] hillSpriteIds = {
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,  0,  1,  1,  1,  1,  2, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 22, 23, 12, 12, 23, 24, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10}
        };

        int[][] slopeSpriteIds = {
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  4,  5, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 11, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 17, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12}
        };

        currentWater = new GameMap(waterSpriteIds, Floor.WATER);
        currentWaterLedge = new GameMap(waterLedgeSpriteIds, Floor.WATER);
        currentDirt = new GameMap(dirtSpriteIds, Floor.DIRT);
        currentGrass = new GameMap(grassSpriteIds, Floor.GRASS);
        currentHills = new GameMap(hillSpriteIds, Floor.HILL);
        currentSlopes = new GameMap(slopeSpriteIds, Floor.SLOPES);
        currentBushes = new GameMap(bushSpriteIds, Floor.BUSHES);
    }

    public void drawWater(Canvas canvas, int waterAnimX){
        for (int j = 0; j < currentWater.getArrayHeight(); j++) {
            for (int i = 0; i < currentWater.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.WATER.getSprite(currentWater.getAnimSpriteId(i, j, waterAnimX)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }
        for (int j = 0; j < currentWaterLedge.getArrayHeight(); j++) {
            for (int i = 0; i < currentWaterLedge.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.WATER.getSprite(currentWaterLedge.getAnimSpriteId(i, j, waterAnimX)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }
    }

    public void draw(Canvas canvas){
        for (int j = 0; j < currentDirt.getArrayHeight(); j++) {
            for (int i = 0; i < currentDirt.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.DIRT.getSprite(currentDirt.getSpriteId(i, j)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }

        for (int j = 0; j < currentGrass.getArrayHeight(); j++) {
            for (int i = 0; i < currentGrass.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.GRASS.getSprite(currentGrass.getSpriteId(i, j)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }

        for (int j = 0; j < currentHills.getArrayHeight(); j++) {
            for (int i = 0; i < currentHills.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.HILL.getSprite(currentHills.getSpriteId(i, j)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }

        for (int j = 0; j < currentSlopes.getArrayHeight(); j++) {
            for (int i = 0; i < currentSlopes.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.SLOPES.getSprite(currentSlopes.getSpriteId(i, j)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }

        for (int j = 0; j < currentBushes.getArrayHeight(); j++) {
            for (int i = 0; i < currentBushes.getArrayWidth(); i++) {
                canvas.drawBitmap(Floor.BUSHES.getSprite(currentBushes.getSpriteId(i, j)), (i * TILE_SIZE) + cameraX, (j * TILE_SIZE) + cameraY, null);
            }
        }
    }

    public void setCameraValues(float cameraX, float cameraY){
        this.cameraX = cameraX;
        this.cameraY = cameraY;
    }

    public boolean canWalkHere(RectF hitbox, float deltaX, float deltaY){
        if (hitbox.left + deltaX < 0 || hitbox.top + deltaY < 0
                || hitbox.right + deltaX > getMapMaxWidth()
                || hitbox.bottom + deltaY > getMapMaxHeight()){
            return false;
        }

        Point[] tileCoords = GetTileCoords(hitbox, deltaX, deltaY);
        int[] waterTileIds = GetTileIds(tileCoords, 0);
        int[] hillTileIds = GetTileIds(tileCoords, 1);

        if(!IsTilesWalkable(waterTileIds, 0)){
            return false;
        }
        if(!IsTilesWalkable(hillTileIds, 1)){
            return false;
        }
        return true;
    }

    private static Point[] GetTileCoords(RectF hitbox, float deltaX, float deltaY){
        Point[] tileCoords = new Point[4];

        int left = (int) ((hitbox.left + deltaX) / TILE_SIZE);
        int right = (int) ((hitbox.right + deltaX) / TILE_SIZE);
        int top = (int) ((hitbox.top + deltaY) / TILE_SIZE);
        int bottom = (int) ((hitbox.bottom + deltaY) / TILE_SIZE);

        tileCoords[0] = new Point(left, top);
        tileCoords[1] = new Point(right, top);
        tileCoords[2] = new Point(left, bottom);
        tileCoords[3] = new Point(right, bottom);

        return tileCoords;
    }

    private int[] GetTileIds(Point[] tileCoords, int tileType){
        int[] tileIds = new int[4];

        for (int i = 0; i < tileCoords.length; i++) {
            if(tileType == 0){
                tileIds[i] = currentWater.getSpriteId(tileCoords[i].x, tileCoords[i].y);
            } else{
                tileIds[i] = currentHills.getSpriteId(tileCoords[i].x, tileCoords[i].y);
            }
        }
        return tileIds;
    }

    public static boolean IsTilesWalkable(int[] tileIds, int tileType){
        for(int i : tileIds){
            if(!IsTileWalkable(i, tileType)){
                return false;
            }
        }
        return true;
    }

    public static boolean IsTileWalkable(int tileID, int tileType){
        if(tileType == 0){
            if(tileID != 4){
                return false;
            }
        } else{
            if(tileID == 0 || tileID == 1 || tileID == 2
                || tileID == 11 || tileID == 13 || tileID == 22
                || tileID == 23 || tileID == 24){
                return false;
            }
        }

        return true;
    }

//    public boolean canWalkHere(float x, float y){
//        if(x < 0 || y < 0){
//            return false;
//        }
//
//        if(x > getMapMaxWidth() || y > getMapMaxHeight()){
//            return false;
//        }
//
//        int tileX = (int) x / TILE_SIZE;
//        int tileY = (int) y / TILE_SIZE;
//        int dirtTileIndexVal = currentDirt.getSpriteId(tileX, tileY);
//        if(dirtTileIndexVal == 3 || dirtTileIndexVal == 8 || dirtTileIndexVal == 10
//                || dirtTileIndexVal == 33 || dirtTileIndexVal == 34  || dirtTileIndexVal == 35){
//            return false;
//        }
//        int hillTileIndexVal = currentHills.getSpriteId(tileX, tileY);
//        if(hillTileIndexVal == 0 || hillTileIndexVal == 1 || hillTileIndexVal == 2
//                || hillTileIndexVal == 11 || hillTileIndexVal == 13 || hillTileIndexVal == 22
//                || hillTileIndexVal == 23 || hillTileIndexVal == 24){
//            return false;
//        }
//
//        return true;
//    }

    public int getMapMaxWidth(){
        return currentDirt.getArrayWidth() * TILE_SIZE;
    }

    public int getMapMaxHeight(){
        return currentDirt.getArrayHeight() * TILE_SIZE;
    }
}
